import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';

@Component({
  selector: 'app-text-area-field-render-and-editor',
  templateUrl: './text-area-field-render-and-editor.component.html',
  styleUrls: ['./text-area-field-render-and-editor.component.scss']
})
export class TextAreaFieldRenderAndEditorComponent implements OnChanges {
  @Input()
  fieldValue?: string;

  @Input()
  fieldHumanName: string;

  @Output()
  generateValueEvent = new EventEmitter();

  @Output()
  valueEditedEvent = new EventEmitter<string>();

  /**
   * Indicate if the fields can be generated by AI.
   * 
   * If true, show the Generate button.
   *
   * @memberof TextAreaFieldRenderAndEditorComponent
   */
  @Input()
  isGenerator = false;

  inEdition = false;

  isLoading = false;

  toggleFieldEditionStatus() {
    this.inEdition = !this.inEdition;
  }

  generateArticleSEoMetaDescription() {
    this.isLoading = true;
    this.generateValueEvent.emit();
  }

  saveEdition() {
    this.valueEditedEvent.emit(this.fieldValue);
    this.toggleFieldEditionStatus();
  }

  ngOnChanges(changes: SimpleChanges): void {
    if (changes['fieldValue']) {
      this.isLoading = false;
    }
  }


  get showGenerateButton(): boolean {
    return this.isGenerator && (!this.fieldValue || this.fieldValue.length == 0);
  }


}
